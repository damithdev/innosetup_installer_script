; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "myapplication"
#define MyAppVersion "1.0.0.8"
#define MyAppPublisher "MyCompany(Pvt) Ltd."
#define MyAppURL "http://www.mycompany.lk/"
#define MyAppExeName "myapplication.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{51CDCEFF-F2EB-4618-8345-5415E6C63055}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=D:\{#MyAppName}
DisableProgramGroupPage=yes
OutputBaseFilename={#MyAppName} {#MyAppVersion} Installer
Compression=lzma
SolidCompression=yes
VersionInfoVersion={#MyAppVersion}

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Dirs]
Name: "{app}\Images";

[InstallDelete]
Type: files; Name: "{app}/ACCP10CONF.txt";
Type: files; Name: "{app}/ACCP20CONF.txt";

[Files]
Source: "D:\UAT_myapp\RestartOnCrash\RestartOnCrash.exe"; DestDir: "D:\RestartOnCrash"; Flags: ignoreversion recursesubdirs ; BeforeInstall: TaskKill('RestartOnCrash.exe')
Source: "D:\UAT_myapp\RestartOnCrash\Setting\settings.ini"; DestDir: "D:\RestartOnCrash"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\myapp.exe"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs ; BeforeInstall: TaskKill('myapp.exe')
Source: "D:\UAT_myapp\emyapp\AutoCompleteTextBox.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\ACCP2.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\ID003ProtocolManager.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\myapp.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\myapp.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\Lang"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\LoadingWindow.exe"; DestDir: "{app}"; Flags: ignoreversion  ; BeforeInstall: TaskKill('LoadingWindow.exe')
Source: "D:\UAT_myapp\emyapp\LoadingWindow.exe.config"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\Newtonsoft.Json.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\NiiPrinterCLib.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\OSW"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\WpfAnimatedGif.dll"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\emyapp\WpfAnimatedGif.xml"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\conf\ik_languages.xml"; DestDir: "C:\conf"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\UAT_myapp\conf\ik_settings.xml"; DestDir: "C:\conf"; Flags: ignoreversion confirmoverwrite uninsneveruninstall onlyifdoesntexist
Source: "D:\UAT_myapp\conf\myappcommissions.xml"; DestDir: "C:\conf"; Flags: ignoreversion confirmoverwrite uninsneveruninstall onlyifdoesntexist
Source: "D:\UAT_myapp\InnoSetupConfigs\ACCP10CONF.txt"; DestDir: "{app}"; Check: IsACCP1Installation; Flags: ignoreversion
Source: "D:\UAT_myapp\InnoSetupConfigs\ACCP20CONF.txt"; DestDir: "{app}"; Check: IsACCP2Installation; Flags: ignoreversion
Source: "D:\UAT_myapp\InnoSetupConfigs\myappautobackup.bat"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\UAT_myapp\Release Note.txt"; DestDir: "{app}"; Flags: ignoreversion
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{commonprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: quicklaunchicon

[Code]
procedure TaskKill(FileName: String);
var
  ResultCode: Integer;
begin
    Exec(ExpandConstant('taskkill.exe'), '/f /im ' + '"' + FileName + '"', '', SW_HIDE,
     ewWaitUntilTerminated, ResultCode);
end;
   
const
  FullDescText =
    'This will install the Program for the ACCP1 Bundle Note Acceptor';
  PartDescText =
    'This will install the Program for the Cash Code Single Note Acceptor';

var
  FullRadioButton: TNewRadioButton;
  PartRadioButton: TNewRadioButton;

procedure InitializeWizard;
var
  CustomPage: TWizardPage;
  FullDescLabel: TLabel;
  PartDescLabel: TLabel;
begin
  CustomPage := CreateCustomPage(wpWelcome, 'Installation type', '');
  FullRadioButton := TNewRadioButton.Create(WizardForm);
  FullRadioButton.Parent := CustomPage.Surface;
  FullRadioButton.Checked := True;
  FullRadioButton.Top := 16;
  FullRadioButton.Width := CustomPage.SurfaceWidth;
  FullRadioButton.Font.Style := [fsBold];
  FullRadioButton.Font.Size := 9;
  FullRadioButton.Caption := 'Installation (Bundle Note Acceptor)'
  FullDescLabel := TLabel.Create(WizardForm);
  FullDescLabel.Parent := CustomPage.Surface;
  FullDescLabel.Left := 8;
  FullDescLabel.Top := FullRadioButton.Top + FullRadioButton.Height + 8;
  FullDescLabel.Width := CustomPage.SurfaceWidth; 
  FullDescLabel.Height := 40;
  FullDescLabel.AutoSize := False;
  FullDescLabel.Wordwrap := True;
  FullDescLabel.Caption := FullDescText;
  PartRadioButton := TNewRadioButton.Create(WizardForm);
  PartRadioButton.Parent := CustomPage.Surface;
  PartRadioButton.Top := FullDescLabel.Top + FullDescLabel.Height + 16;
  PartRadioButton.Width := CustomPage.SurfaceWidth;
  PartRadioButton.Font.Style := [fsBold];
  PartRadioButton.Font.Size := 9;
  PartRadioButton.Caption := 'Installation (Single Note Acceptor)'
  PartDescLabel := TLabel.Create(WizardForm);
  PartDescLabel.Parent := CustomPage.Surface;
  PartDescLabel.Left := 8;
  PartDescLabel.Top := PartRadioButton.Top + PartRadioButton.Height + 8;
  PartDescLabel.Width := CustomPage.SurfaceWidth;
  PartDescLabel.Height := 40;
  PartDescLabel.AutoSize := False;
  PartDescLabel.Wordwrap := True;
  PartDescLabel.Caption := PartDescText;
end;

function IsACCP1Installation: Boolean;
begin
  Result := FullRadioButton.Checked;
  
end;

function IsACCP2Installation: Boolean;
begin
  Result := PartRadioButton.Checked;
end;

function InitializeSetup(): boolean;
var
  ResultCode: integer;
begin

  // Launch Notepad and wait for it to terminate
  // Find the auto backup in my autobackupbat repository
  if Exec(ExpandConstant('D:\emyapp\myappautobackup.bat'), '', '', SW_SHOW,
     ewWaitUntilTerminated, ResultCode) then
  begin
    // handle success if necessary; ResultCode contains the exit code
  end
  else begin
    // handle failure if necessary; ResultCode contains the error code
  end;

  // Proceed Setup
  Result := True;

end;


[Run]
Filename: "D:\RestartOnCrash\RestartOnCrash.exe"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

